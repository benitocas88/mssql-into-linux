---
- name: mssql-server 2019 provision
  hosts: all
  become: yes
  vars_files:
    - ./vars/mssql.yml
  # https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables?view=sql-server-ver15
  environment:
    ACCEPT_EULA: Y
    MSSQL_PID: Express
    MSSQL_SA_PASSWORD: "{{ mssql_sa_password }}"
    MSSQL_TCP_PORT: 1433
    MSSQL_IP_ADDRESS: 0.0.0.0
  tasks:
    - name: update linux packages
      apt:
        update_cache: yes

    - name: install essential packages
      apt:
        pkg:
          - build-essential
          - software-properties-common
        state: present

    # https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-ver15#install
    - name: import the public repository GPG keys
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc

    - name: register the Microsoft SQL Server Ubuntu repository for SQL Server 2019
      apt_repository:
        repo: deb [arch=amd64,arm64,armhf] https://packages.microsoft.com/ubuntu/18.04/mssql-server-2019 bionic main
        filename: mssql-server-2019
        update_cache: yes

    - name: install SQL Server
      apt:
        name: mssql-server
        update_cache: yes

    - name: run mssql-conf setup
      command: /opt/mssql/bin/mssql-conf setup

    - name: start mssql-server service and always enabled
      service:
        name: mssql-server
        state: started
        enabled: yes

    # https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-ver15#tools
    - name: register the Microsoft Ubuntu repository for command-line tools
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main
        filename: mssql-command-line
        update_cache: yes

    - name: install command-line tools and unixODBC developer package
      apt:
        pkg:
          - mssql-tools
          - unixodbc-dev

    - name: set PATH environment variable in a bash shell
      lineinfile:
        path: /home/vagrant/.bashrc
        line: export PATH="$PATH:/opt/mssql-tools/bin"
        regexp: "^PATH="
        firstmatch: yes
        insertafter: EOF
    
    # https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-ubuntu?view=sql-server-ver15#create-and-query-data
    - name: create a database
      become: no
      command: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "{{ mssql_sa_password }}" -Q "CREATE DATABASE {{ mssql_db_name }}"

    - name: which sqlserver I have?
      become: no
      command: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "{{ mssql_sa_password }}" -Q "SELECT @@version"
      register: sqlversion

    - name: you have this version of sqlserver
      debug:
        msg: "{{ sqlversion.stdout }}"
